services:
  db:
    image: postgres:15
    container_name: postgres-db
    env_file:
      - .env.dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - health-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    env_file:
      - .env.dev
    image: flyway/flyway:9
    command: -url=${FLYWAY_URL} -user=${FLYWAY_USER} -password=${FLYWAY_PASSWORD} clean
    depends_on:
      db:
        condition: service_healthy
    networks:
      - health-net

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.dev
    ports:
      - "8010:8080"
    networks:
      - health-net

  web:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
    env_file:
      - .env
    container_name: web
    ports:
      - 8001:80
    networks:
      - health-net

volumes:
  pgdata:

networks:
  health-net: